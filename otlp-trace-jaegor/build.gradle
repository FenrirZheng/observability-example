plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.fenrir.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//    B. 分散式追蹤 (Distributed Tracing) 功能
//    如果你還想引入分散式追蹤功能（Micrometer Tracing），則需要添加 spring-boot-starter-web (如果你是 Web 應用) 和 spring-boot-starter-actuator，以及你選擇的追蹤後端依賴。
//    以使用 Zipkin 作為追蹤後端為例：
    // Micrometer Tracing for Zipkin
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'io.micrometer:micrometer-tracing'
// (zipkin-reporter-brave + micrometer-tracing-bridge-brave) and micrometer-tracing-bridge-otel 選擇一個!!
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
//    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'org.aspectj:aspectjweaver'


    implementation 'io.opentelemetry:opentelemetry-api:1.51.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.51.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-logging:1.51.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
