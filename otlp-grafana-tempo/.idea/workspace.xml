<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0ed7137e-66f1-4769-acc4-832987099df5" name="Changes" comment="使用Badger as local storage" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="open-telemetry-java" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="open-telemetry-java" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="open-telemetry-java" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2yOz3TnY7BQSGdpvp2n9Z5r3UF4" />
  <component name="ProjectViewState">
    <option name="abbreviatePackageNames" value="true" />
    <option name="flattenModules" value="true" />
    <option name="flattenPackages" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.collector/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.grafana_tempo/docker-compose.yaml.grafana: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.grafana_tempo/docker-compose.yaml.loki: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.grafana_tempo/docker-compose.yaml.prometheus: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.grafana_tempo/docker-compose.yaml.tempo: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.grafana_tempo/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.jaeger/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.otel/docker-compose.yaml.otel-collector: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.otel/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.prometheus/docker-compose.yaml.node-exporter: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.prometheus/docker-compose.yaml.prometheus: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.prometheus/docker-compose.yaml.pushgateway: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.prometheus/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.use-badger-store/docker-compose.yaml.jaeger: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.use-badger-store/docker-compose.yaml.prepare-data-dir: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.use-badger-store/docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build open-telemetry-java.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Build otlp-grafana-tempo.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.open-telemetry-java [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.open-telemetry-java [dependencies].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.otlp-grafana-tempo [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.otlp-grafana-tempo [clean].executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.OpenTelemetryJavaApplication | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.OpenTelemetryJavaApplication | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.jeager-test | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | span annotation.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;Spring Boot.OpenTelemetryJavaApplication.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/fenrir/code/my-github/observability-example/otlp-grafana-tempo&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.fileTypes&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.fenrir.example.opentelemetryjava.service" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/jaeger/use-badger-store" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/agent_lib" />
    </key>
  </component>
  <component name="RunManager" selected="Spring Boot.OpenTelemetryJavaApplication">
    <configuration name="test | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/http-test/test.http" executionIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="otlp-grafana-tempo" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="otlp-grafana-tempo" />
      <option name="filePath" />
      <method v="2" />
    </configuration>
    <configuration name="OpenTelemetryJavaApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="SCHEDULED_DEBUGGER" value="true" />
      <module name="open-telemetry-java.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.fenrir.example.opentelemetryjava.OpenTelemetryJavaApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="otel/docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="otel/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="otel/docker-compose.yaml.otel-collector: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="otel-collector" />
            </list>
          </option>
          <option name="sourceFilePath" value="otel/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="prometheus/docker-compose.yaml.node-exporter: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="node-exporter" />
            </list>
          </option>
          <option name="sourceFilePath" value="prometheus/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="prometheus/docker-compose.yaml.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="prometheus/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.test | #1" />
        <item itemvalue="Docker.otel/docker-compose.yaml.otel-collector: Compose Deployment" />
        <item itemvalue="Docker.prometheus/docker-compose.yaml.node-exporter: Compose Deployment" />
        <item itemvalue="Docker.prometheus/docker-compose.yaml.prometheus: Compose Deployment" />
        <item itemvalue="Docker.otel/docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.26094.121" />
        <option value="bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-IU-251.26094.121" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0ed7137e-66f1-4769-acc4-832987099df5" name="Changes" comment="" />
      <created>1749720210948</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749720210948</updated>
    </task>
    <task id="LOCAL-00001" summary="updated">
      <option name="closed" value="true" />
      <created>1749804842805</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1749804842805</updated>
    </task>
    <task id="LOCAL-00002" summary="更新span on my thread的方式...">
      <option name="closed" value="true" />
      <created>1749806707143</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1749806707143</updated>
    </task>
    <task id="LOCAL-00003" summary="使用Badger as local storage">
      <option name="closed" value="true" />
      <created>1749814258141</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1749814258141</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="updated" />
    <MESSAGE value="更新span on my thread的方式..." />
    <MESSAGE value="使用Badger as local storage" />
    <option name="LAST_COMMIT_MESSAGE" value="使用Badger as local storage" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/com/fenrir/example/opentelemetryjava/service/SpanHappyService.java</url>
          <line>3</line>
          <properties class="com.fenrir.example.opentelemetryjava.service.SpanHappyService" method="processWithAnnotation">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>